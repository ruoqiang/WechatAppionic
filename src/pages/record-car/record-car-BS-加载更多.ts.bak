import { Component,ViewChild  } from '@angular/core';
import { NavController, NavParams } from 'ionic-angular';
import { Storage } from '@ionic/storage'
import {RestProvider} from '../../providers/rest/rest'
import BScroll from 'better-scroll'
import {UtilsProvider} from '../../providers/utils/utils'
/**
 * Generated class for the RecordCarPage page.
 *
 * See https://ionicframework.com/docs/components/#navigation for more info on
 * Ionic pages and navigation.
 */
// declare var window
@Component({
  selector: 'page-record-car',
  templateUrl: 'record-car.html',
})
export class RecordCarPage { //record-car-BS-加载更多
  public token:string;
  public recordList:Array<object> = [];
  
  @ViewChild("wrapper") wrapper;// html中引用组件
  @ViewChild("recordCar") recordCar;// html中引用组件
  @ViewChild("recordImg") recordImg;// html中引用组件
  @ViewChild("datePicker1") datePicker1;// html中引用组件 组件与dom元素一样通过加#获取引用
  @ViewChild("datePicker2") datePicker2;// html中引用组件
  @ViewChild("customToast") customToast;// html中引用组件
  
  backTopShow= false
    defaultDate= '2016-02-10' //注意组件内部 当日期发生变化了才会初始化
    defaultDate2= '2018-05-12'
    carNo=''
    pageSize = 20
    page= 0
    pullup= true
    beforeScroll= true
    hasMore= true
    ajaxLoaingShow= true
    mask=true//防止点击上一个列表触摸这个页面的日期选择
    tipsText= '开始日期不能大于结束日期'
    scroll:any;
    btnDisable:Boolean = false
    isLoadingMore = false
    isShowNoListTips = false
  constructor(public navCtrl: NavController, public navParams: NavParams,public storage:Storage,public rest: RestProvider,public utils: UtilsProvider) {
    this.defaultDate = utils.getNowDate(-7)
    this.defaultDate2 = utils.getNowDate()
  }

  ionViewDidEnter() { //ionViewWillEnter
    this._initScrollHeight()
    console.log('carListInfo----start record');
    this.storage.get('carListInfo').then((data) => {
      if (data != null) {
        console.log(data);
        this.carNo = data.CarNum
        this.loadMore()
        this._initScroll()
      }
    })
  }
  _initScrollHeight () {
    var domRecordCar = this.recordCar.nativeElement
    var domRecordImg = this.recordImg.nativeElement
    let _height = domRecordCar.clientHeight
    let _imgHeight = domRecordImg.clientHeight
    
    console.log(domRecordCar);
    this.wrapper.nativeElement.style.height = `${_height - _imgHeight}px`
  }
  _initScroll () {
    // console.log(this.wrapper);
    
    this.scroll = new BScroll(this.wrapper.nativeElement, {
      probeType: 3,
      click: true,
      bounce: true,
      scrollY: true,
      scrollX: false
    })

    this.scroll.on('scroll', (pos) => {
      // console.log(this.scroll.y);
      this.scrollPos(pos)
    })
    this.scroll.on('pullingUp',()=> {
      // alert('pullingUp')
      // // this.isPullUpLoad = true
      // this.loadMore()
    })
    this.scroll.on('scrollEnd',()=> {
    
      if (this.scroll.y <= (this.scroll.maxScrollY + 10)) { //+ 5
        // alert('scrollEnd')
        console.log('this.isLoadingMore',this.isLoadingMore);
        if(!this.isLoadingMore) {
          this.loadMore()
        }
      }
    })
    
  }

  loadMore() {
    var that = this
    this.isLoadingMore = true //网络请求慢的时候可以遮盖住页面禁止继续上拉加载
    if (!this.hasMore) {
      this.isLoadingMore = false
       return
     }
     this.page++
     var api='Main/QueryConsumeDetailNew' //获取信息接口
     this.storage.get('token').then((val) => {
      this.token = val
      var params = {
        token: val,
        data: {
          CarNo: this.carNo,
          outTimeBefore: this.defaultDate + ' 00:00:00', //this.defaultDate,
          outTimeAfter: this.defaultDate2 + ' 23:59:59',
          pageHelp: {
            "CurrentPage": this.page, //当前页
            "PageSize": this.pageSize //每页显示行数
          }
        }
      }
      this.rest.doPost(api,params, (ret)=> {
        if(ret.issuccess) {
         // setTimeout(()=> {
            if(ret.result.ConsumeDetail ===null) ret.result.ConsumeDetail = []
            that.recordList = that.recordList.concat(ret.result.ConsumeDetail)
            that.isLoadingMore = false
            // if(that.recordList.length ===0) that.isShowNoListTips = true
            that.isShowNoListTips = that.recordList.length == 0 ? true : false
            this.scroll.refresh()
            that._checkMore(ret.result)
         // }, 500)
        }
      })
    })

   
  }
  _checkMore(data) {
      if (!data.ConsumeDetail.length || (data.pageHelp.PageSize + (data.pageHelp.CurrentPage - 1) *  this.pageSize) >= data.pageHelp.AllCount) {
        this.hasMore = false
      }
    }
  _searchList() {
    let validateDate = this.validateDate(this.defaultDate, this.defaultDate2)
    if (!validateDate) {
      // this.$refs.topTips.show()
      this.customToast.show('开始时间不能大于结束时间',1000)
      return
    }
    this.hasMore = true
    this.ajaxLoaingShow = true
    // this.getQueryResult()
    this.page = 0
    this.recordList = []
    this.loadMore()
    setTimeout(() => {
      this.ajaxLoaingShow = false
    }, 600)
  }
  backTop(e) {
    // this.$refs.listRecord.backTop() this.scroll.backTop()
    this.scroll.scrollTo(0, 0, 500)
  }
  scrollPos(pos) {
    // console.log(pos)
    if (pos.y < -160) {
      this.backTopShow = true
    } else {
      this.backTopShow = false
    }
  }
  // selectedDateStart(val) {
  //   // console.log('selectedDateStart', val)
  //   this.defaultDate = val
  // }
  // selectedDateEnd(val) {
  //   // console.log('selectedDateEnd', val)
  //   this.defaultDate2 = val
  // }
  validateDate(date1, date2) {
    let newdate1 = new Date(date1).getTime()
    let newdate2 = new Date(date2).getTime()
    return newdate1 - newdate2 > 0 ? 0 : 1
  }
  selectedDefaultDateFromChild(data) {
    console.log('selectedDefaultDateFromChild---' ,data)
    this.defaultDate = data;
  }
  selectedDefaultDateFromChild2(data) {
    console.log('selectedDefaultDateFromChild2---' ,data)
    this.defaultDate2 = data;
  }
}
